# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ${{ matrix.os }}

    strategy:
        matrix:
          os: [ubuntu-latest, windows-latest, macos-latest]  # One for each OS
          go-version: ['>=1.22']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: make install-tools

    - name: Install protoc
      run: |
        if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
          sudo apt-get install -y protobuf-compiler
        elif [ ${{ matrix.os }} == 'macos-latest' ]; then
          brew install protobuf
        elif [ ${{ matrix.os }} == 'windows-latest' ]; then
          choco install protoc
        fi

    # - name: Install Protoc
    #   uses: arduino/setup-protoc@v3
    #   with:
    #     version: "23.x"

    - name: Run Go version
      run: go version

    - name: Test
      run: make test

    - name: Build using Make
      run: make

    - name: Upload Binary as Artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: a7p-binary-${{ matrix.os }}
        path: dist/a7p${{ matrix.os == 'windows-latest' && '.exe' || '' }}
